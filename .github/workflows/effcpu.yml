name: debug-neutron
on:
  pull_request:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        required: false
      KERNEL_TREE:
        description: 'Kernel Tree'
        default: 'https://github.com/SenseiiX/fusionX_sm8250'
        required: true
      KERNEL_TREE_BRANCH:
        description: 'Kernel Tree Branch'
        required: true
        default: 'main-rework'
      CODENAME:
        description: 'Phone Codename'
        default: 'munch'
        required: true
      ANYKERNEL_URL:
        description: 'AnyKernel Url (leave blank if you dont want AnyKernel)'
        default: 'https://github.com/SenseiiX/AnyKernel3'
        required: false
      ANYKERNEL_BRANCH:
        description: 'AnyKernel Branch (defaults to codename)'
        default: 'effcpu'
        required: false
      UPLOAD_TO_RELEASE:
        description: 'Upload to release'
        type: boolean
        default: false

jobs:
  build_original:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: sudo apt install flex libncurses6

      - name: Download & Extract Clang
        run: |
          wget https://github.com/Neutron-Toolchains/clang-build-catalogue/releases/download/10032024/neutron-clang-10032024.tar.zst -O clang.tar.zst
          mkdir clang
          unzstd -d clang.tar.zst
          tar -xf clang.tar -C clang

      - name: Checkout Kernel
        run: git clone --depth=1 ${{ github.event.inputs.KERNEL_TREE }} -b ${{ github.event.inputs.KERNEL_TREE_BRANCH }} kernel_tree

      - name: Apply Patches
        run: |
          cd kernel_tree
          bash nextpatch.sh

      - name: Build Kernel - Original
        run: |
          export PATH="$(pwd)/clang/bin:$PATH"
          export ARCH=arm64
          export SUBARCH=ARM64
          export KBUILD_BUILD_USER="SenX"
          export KBUILD_BUILD_HOST="@dev"
          cd kernel_tree
          make O=out vendor/munch_defconfig
          make O=out CC=clang -j$(nproc --all) CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
          cp out/arch/arm64/boot/Image.gz ../Image-original.gz
          cp out/arch/arm64/boot/dtb.img ../dtb-original || true
          cp out/arch/arm64/boot/dtbo.img ../dtbo-original.img || true

      - name: Upload Original Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: original-build
          path: |
            Image-original.gz
            dtb-original
            dtbo-original.img

  build_modified:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: sudo apt install flex libncurses6

      - name: Download & Extract Clang
        run: |
          wget https://github.com/Neutron-Toolchains/clang-build-catalogue/releases/download/10032024/neutron-clang-10032024.tar.zst -O clang.tar.zst
          mkdir clang
          unzstd -d clang.tar.zst
          tar -xf clang.tar -C clang

      - name: Checkout Kernel
        run: git clone --depth=1 ${{ github.event.inputs.KERNEL_TREE }} -b ${{ github.event.inputs.KERNEL_TREE_BRANCH }} kernel_tree

      - name: Apply Patches
        run: |
          cd kernel_tree
          bash nextpatch.sh

      - name: Apply Modifications
        run: |
          sed -i '/<2553600>,/c\<2553600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi 
          sed -i '/<2649600>,/c\//<2649600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i '/<2745600>,/c\//<2745600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i '/<2841600>;/c\//<2841600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i 's/qcom,mdss-pan-physical-width-dimension = <70>;$/qcom,mdss-pan-physical-width-dimension = <695>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi
          sed -i 's/qcom,mdss-pan-physical-height-dimension = <155>;$/qcom,mdss-pan-physical-height-dimension = <1546>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi

      - name: Build Kernel - Modified
        run: |
          export PATH="$(pwd)/clang/bin:$PATH"
          export ARCH=arm64
          export SUBARCH=ARM64
          export KBUILD_BUILD_USER="SenX"
          export KBUILD_BUILD_HOST="@dev"
          cd kernel_tree
          make O=out vendor/munch_defconfig
          make O=out CC=clang -j$(nproc --all) CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
          cp out/arch/arm64/boot/Image.gz ../Image-modified.gz
          cp out/arch/arm64/boot/dtb.img ../dtb-modified || true
          cp out/arch/arm64/boot/dtbo.img ../dtbo-modified.img || true

      - name: Upload Modified Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: modified-build
          path: |
            Image-modified.gz
            dtb-modified
            dtbo-modified.img

  package_anykernel:
    needs: [build_original, build_modified]
    runs-on: ubuntu-latest
    steps:
      - name: Download Original Kernel
        uses: actions/download-artifact@v4
        with:
          name: original-build
          path: .

      - name: Download Modified Kernel
        uses: actions/download-artifact@v4
        with:
          name: modified-build
          path: .

      - name: Clone AnyKernel3
        run: git clone --recursive --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b ${{ github.event.inputs.ANYKERNEL_BRANCH || github.event.inputs.CODENAME }} AnyKernel3

      - name: Add Kernel Images to AnyKernel3
        run: |
          cp Image-original.gz AnyKernel3/Image.gz
          if [ -e "dtb-original" ]; then
          mv -f dtb-original dtb1
          cp -f dtb1 AnyKernel3/munch-normal-dtb
          fi
          if [ -e "dtb-modified" ]; then
          mv -f dtb-modified dtb2
          cp -f dtb2 AnyKernel3/munch-effcpu-dtb
          fi
          cp dtbo-original.img AnyKernel3/munch-aosp-dtbo.img || true
          cp dtbo-modified.img AnyKernel3/munch-miui-dtbo.img || true
          name=TEST-EFFCPU-${{ github.event.inputs.CODENAME }}-${{ github.run_id }}.zip
          cd AnyKernel3
          zip -q -r $name *
          mv $name ../

      - name: Upload Flashable Kernel Zip
        uses: actions/upload-artifact@v4
        with:
          name: FakeDreamer-j3s-test-${{ github.event.inputs.CODENAME }}-${{ github.run_id }}
          path: |
            AnyKernel3/
            !AnyKernel3/.git
            !AnyKernel3/.github
